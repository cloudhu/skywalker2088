[package]
name = "skywalker2088"
authors = ["Cloud Hu <cloudhu9527@gmail.com>"]
version = "0.1.3"
edition = "2021"

[dependencies]
bevy_asset_loader = { version = "0.21.0", features = [ "2d","standard_dynamic_assets"] }
bevy_kira_audio = { version = "0.20.0", features = ["ogg"] }
rand = "0.9.0-alpha.2"
bevy-parallax = "0.10.0"
bevy_embedded_assets = "0.11.0"
bevy_prototype_lyon = "0.12.0"
serde = "1.0.210"
serde_json = "1.0.128"
uuid = "1.11.0"
bevy_pkv = "0.11.1"
sys-locale = "0.3"
bevy_rapier2d = { version = "0.27.0", features = [
    "simd-stable",
    "debug-render-2d",
] }
# Compile low-severity logs out of native builds for performance.
log = { version = "0.4", features = [
    "max_level_debug",
    "release_max_level_warn",
] }
# Compile low-severity logs out of web builds for performance.
tracing = { version = "0.1", features = [
    "max_level_debug",
    "release_max_level_warn",
] }
csv = "1.3.1"
thiserror = "2.0.3"
leafwing-input-manager = "0.15.1"
strum_macros = "0.26.4"
derive_more = { version = "1", features = ["full"] }
ron = "0.8.1"
argh = "0.1.12"
winit = "0.30.5"
image = "0.25.5"
strum = "0.26.3"
#bevy_common_assets = "0.11.0"

[dependencies.bevy]
version = "0.14.2"
# Disable the default features if there are any that you do not want
default-features = false
# https://docs.rs/crate/bevy/latest/features
features = [
    # "android_shared_stdcxx",
    "animation",
    "bevy_asset",
    # "bevy_audio",#bevy_kira_audio平替
    "bevy_color",
    "bevy_core_pipeline",
    "bevy_gilrs",#Adds gamepad support
     "bevy_gizmos",#Adds support for rendering gizmos
    # "bevy_gltf",
    # "bevy_pbr",
    "bevy_render",
    # "bevy_scene",
    "bevy_sprite",
    "bevy_state",
    "bevy_text",
    "bevy_ui",
    "wayland",#对Linux系统支持，也可以选择x11
    #"bevy_winit",#启用wayland也就启动winit了
    "default_font",
    "hdr",
    "multi_threaded",
    "png",
#     "smaa_luts",
    "sysinfo_plugin",
     "tonemapping_luts",#2d相机tonemapping效果需要
    # "vorbis", #bevy_kira_audio使用ogg不需要
    # "webgl2",

    # https://bevyengine.org/news/bevy-webgpu/
    # https://github.com/bevyengine/bevy/tree/main/examples#webgl2-and-webgpu
    # https://github.com/jgayfer/bevy_light_2d/pull/7
    "webgpu",
    # "x11",
]

[features]
default = [
    # Default to a native dev build.
    "dev_native",
]
dev = [
    # Improve compile times for dev builds by linking Bevy as a dynamic library.
    "bevy/dynamic_linking",
    "bevy/bevy_dev_tools",
]
dev_native = [
    "dev",
    # Enable asset hot reloading for native dev builds.
    "bevy/file_watcher",
    # Enable embedded asset hot reloading for native dev builds.
    "bevy/embedded_watcher",
]

# Idiomatic Bevy code often triggers these lints, and the CI workflow treats them as errors.
# In some cases they may still signal poor code quality however, so consider commenting out these lines.
[lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments -- which triggers this lint.
too_many_arguments = "allow"
# Queries that access many components may trigger this lint.
type_complexity = "allow"


# Compile with Performance Optimizations:
# https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

# The default profile is optimized for Wasm builds because
# that's what [Trunk reads](https://github.com/trunk-rs/trunk/issues/605).
# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"

# Override some settings for native builds.
[profile.release-native]
# Default to release profile values.
inherits = "release"
# Optimize with performance in mind.
opt-level = 3
# Keep debug information in the binary.
strip = "none"
